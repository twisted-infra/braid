#! /usr/bin/python

# This configuration file is described in $BUILDBOT/docs/config.xhtml

# This is used to run the Twisted Buildbot at
# <http://buildbot.twistedmatrix.com/>. Passwords and other secret
# information are loaded from a neighboring file called 'private.py'.

# Enable TCP keepalives.  The build master is terrible at noticing
# disconnected slaves.  Also it's terrible at letting me enable tcp
# keepalives.
from twisted.spread.pb import PBServerFactory
_parent = PBServerFactory.protocol
class KeepaliveBroker(_parent):
    def makeConnection(self, transport):
        transport.setTcpKeepAlive(True)
        return _parent.makeConnection(self, transport)
PBServerFactory.protocol = KeepaliveBroker

# We now return to your regularly scheduled program.
from os.path import expanduser, dirname
import sys
sys.path.insert(0, expanduser('~/private'))
sys.path.insert(0, dirname(__file__))
del expanduser, dirname, sys

from buildbot.changes.pb import PBChangeSource
from buildbot.schedulers.timed import Nightly
from buildbot.schedulers import forcesched
from buildbot.steps.source import SVN
from buildbot.process.factory import s
from buildbot.status import words, client, mail
from buildbot.status.web.auth import BasicAuth
from buildbot.status.web.authz import Authz
from buildbot.locks import SlaveLock
from buildbot.buildslave import BuildSlave

import private # holds passwords
reload(private) # make it possible to change the contents without a restart

from twisted_factories import (
    TwistedDocumentationBuildFactory, FullTwistedBuildFactory,
    TwistedSphinxBuildFactory,
    GoodTwistedBuildFactory,
    TwistedReactorsBuildFactory, Win32RemovePYCs,
    LinuxPyOpenSSLBuildFactory,
    OSXPyOpenSSLBuildFactory,
    TwistedEasyInstallFactory,
    TwistedEasyInstallVirtualEnvFactory,
    PyPyTranslationFactory,
    TwistedBdistMsiFactory,
    TwistedGCoverageFactory,
    TwistedCoveragePyFactory, CPythonBuildFactory,
    TwistedBenchmarksFactory,
    TwistedPython3Tests,
    TwistedCheckerBuildFactory,
    PyFlakesBuildFactory,
    )

from txbuildbot.bzrsvn import BzrSvn
from txbuildbot.git import TwistedGit, MergeForward

from txbuildbot.web import TwistedWebStatus
from txbuildbot.scheduler import TwistedScheduler

BuildmasterConfig = c = {}

# I set really=False when testing this configuration at home
really = True
usePBChangeSource = True

# Maximum number of builds to execute on a slave at a time.  Slaves
# not listed here have no limit.
slave_max_builds = {
    'tomprince-socrates-winxp-1': 1,
    'canonical-ubuntu-12.10': 2,
    'canonical-ubuntu-13.04': 2,
    'bot-glyph-6': 1,
    }

fedora17_slaves = ['fedora-fedora17-x86_64-%d' % (i,) for i in range(1,3)]
fedora18_slaves = ['fedora-fedora18-x86_64-%d' % (i,) for i in range(1,3)]
fedora19_slaves = ['fedora-fedora19-x86_64-%d' % (i,) for i in range(1,3)]
rhel6_slaves = ['fedora-rhel6-x86_64-%d' % (i,) for i in range(1,3)]

debian6_slaves = ['rackspace-debian6-%d' % (i,) for i in range(1,3)]
debian7_slaves = ['rackspace-debian7-%d' % (i,) for i in range(1,3)]
ubuntu12_04_slaves = ['rackspace-ubuntu-12.04-%d' % (i,) for i in range(1,3)]
ubuntu12_10_slaves = ['rackspace-ubuntu-12.10-%d' % (i,) for i in range(1,3)]
ubuntu13_04_slaves = ['rackspace-ubuntu-13.04-%d' % (i,) for i in range(1,3)]
ubuntu13_10_slaves = ['rackspace-ubuntu-13.10-%d' % (i,) for i in range(1,3)]
freebsd10_0_slaves = ['rackspace-freebsd-10.0-%d' % (i,) for i in range(1,3)]


c['slaves'] = []
alwaysNotify = ['tom.prince@ualberta.net']
for bot in private.bot_info.keys():
    password, notifyOnMissing = private.bot_info[bot]
    if alwaysNotify not in notifyOnMissing:
        notifyOnMissing.extend(alwaysNotify)
    c['slaves'].append(BuildSlave(
            bot, password, slave_max_builds.get(bot, None),
            notifyOnMissing, 2400))

c['change_source'] = []

# the Twisted buildbot currently uses the contrib/svn_buildbot.py script.
# This makes a TCP connection to the ChangeMaster service to push Changes
# into the build master. The script is invoked by
# /svn/Twisted/hooks/post-commit, so it will only be run for things inside
# the Twisted repository. However, the standard SVN practice is to put the
# actual trunk in a subdirectory named "trunk/" (to leave room for
# "branches/" and "tags/"). We want to only pay attention to the trunk, so
# we use "trunk" as a prefix for the ChangeSource. This also strips off that
# prefix, so that the Builders all see sensible pathnames (which means they
# can do things like ignore the sandbox properly).

source = PBChangeSource(prefix="trunk/")
c['change_source'].append(source)


## configure the builders

# for build-on-branch
baseURL = "svn://svn.twistedmatrix.com/svn/Twisted/"
defaultBranch = "trunk"
source_update = s(SVN, baseURL=baseURL, defaultBranch=defaultBranch,
                  mode="update")
source_copy = s(SVN, baseURL=baseURL, defaultBranch=defaultBranch,
                mode="copy")
source_export = s(SVN, baseURL=baseURL, defaultBranch=defaultBranch,
                  mode="export")

gitURL = "https://code.twistedmatrix.com/git/Twisted"

# use git_migrating for slaves that are being newly migrated from
# bzr (and later replace them with git_update).
git_migrating = [
    TwistedGit(repourl=gitURL,
               branch="trunk", mode='full', method='clobber'),
    MergeForward(repourl=gitURL)
]

git_update = [
    TwistedGit(repourl=gitURL,
               branch="trunk", mode='full', method='fresh'),
    MergeForward(repourl=gitURL)
]


bzr_update = [ BzrSvn(baseURL="https://code.twistedmatrix.com/bzr/Twisted/", branch='trunk') ]

builders = []

oneCPULock = SlaveLock('cpu-1', maxCount=1)
twoCPULock = SlaveLock('cpu-2', maxCount=2)

botCube = {
    'slavenames': ['bot-cube'],
    'locks': [oneCPULock]}

builders.append({
        'slavenames': fedora18_slaves,
        'name': 'documentation',
        'builddir': 'documentation',
        'factory': TwistedDocumentationBuildFactory(git_update),
        'category': 'supported'})

bot_exarkun_1 = {
    'slavenames': ['bot-exarkun-1'],
    'locks': [twoCPULock.access('counting')]}

bot = bot_exarkun_1.copy()
bot.update({
        'name': 'sphinx-documentation',
        'builddir': 'sphinx-documentation',
        'factory': TwistedSphinxBuildFactory(bzr_update),
        'category': 'unsupported'})
builders.append(bot)
del bot

# Builder for TwistedChecker.
# It requires package pylint 0.25.1, and pep8 >= 1.0.0 to run. -zomux
builders.append({
        'slavenames': ['bot-glyph-1'],
        'name': 'twistedchecker',
        'builddir': 'twistedchecker',
        'factory': TwistedCheckerBuildFactory(git_update),
        'category': 'supported'})

builders.append({
        'slavenames': fedora17_slaves,
        'name': 'pyflakes',
        'builddir': 'pyflakes',
        'factory': PyFlakesBuildFactory(git_update),
        'category': 'supported'})

builders.append({
        'name': 'twisted-gcoverage',
        'builddir': 'twisted-gcoverage',
        'slavenames': ['bot-therve-1'],
        # Use svn here because this builder typically doesn't build
        # branches, only trunk, and with svn we can use mode="copy"
        # which protects us more from stale data being kept around.
        'factory': TwistedGCoverageFactory(python=["python"], source=source_copy),
        'category': 'unsupported'})

builders.append({
        'name': 'twisted-coverage.py',
        'builddir': 'twisted-coverage.py',
        'slavenames': ['bot-therve-1'],
        # Same logic as above -might- apply here, but there are no
        # -known- issues with stale data messing up results.  It might
        # be nice to be consistent with gcoverage here though just so
        # revision numbers line up.
        'factory': TwistedCoveragePyFactory(python=["python"], source=bzr_update),
        'category': 'supported'})

builders.append({
    'slavenames': ['bot-glyph-1'],
    'name': 'trusty64-py2.7-select',
    'builddir': 'lucid64-python2.7-select',
    'factory': FullTwistedBuildFactory(git_update,
                                       python=["python2.7", "-Wall"]),
    'category': 'supported'})


builders.append({
        'slavenames': ['bot-glyph-1'],
        'name': 'trusty64-cpy2.7maint-translator',
        'builddir': 'lucid32-python2.7maint-translator',
        'factory': CPythonBuildFactory(
            "2.7", "python2.7", [
                "setuptools-12.0.5",
                "pycrypto-2.6.1",
                "gmpy-1.14",
                "pyOpenSSL-0.10",
                "zope.interface-3.6.1",
                "pyasn1-0.0.11a",
                "testtools-0.9.11",
                "subunit-0.0.5",
                ]),
        'category': 'translator'})


builders.append({
        'name': 'fedora18-x86_64-py2.7-maint',
        'builddir': 'fedora18-x86_64-py2.7-maint',
        'slavebuilddir': 'python2.7-maint',
        'slavenames': ['fedora-fedora18-x86_64-1'],
        'factory': FullTwistedBuildFactory(git_update,
            python=["../../python2.7-translator/python", "-Wall"]),
        'category': 'unsupported'})


builders.append({
        'name': 'fedora18-x86_64-py2.7-translator',
        'builddir': 'fedora18-x86_64-py2.7-translator',
        'slavebuilddir': 'python2.7-translator',
        'slavenames': ['fedora-fedora18-x86_64-1'],
        'factory': CPythonBuildFactory(
            "2.7", "python2.7", [
                "setuptools-12.0.5",
                "pycrypto-2.1.0",
                "gmpy-1.14",
                "pyOpenSSL-0.10",
                "zope.interface-3.6.1",
                "pyasn1-0.0.11a",
                "testtools-0.9.11",
                "subunit-0.0.5",
                ]),
        'category': 'translator'})


builders.append({
        'slavenames': ['bot-glyph-1'],
        'name': 'trusty64-py2.7maint',
        'builddir': 'lucid32-py2.7maint',
        'factory': FullTwistedBuildFactory(git_update,
                                           python=["../python", "-Wall"]),
        'category': 'supported'})


python27W3 = {
    'slavenames': ['canonical-ubuntu-13.04'],
    'name': 'python-3k-warnings',
    'builddir': 'python-3k-warnings',
    'factory': FullTwistedBuildFactory(git_update,
                                       python=["python2.7", "-3"]),
    'category': 'unsupported'}
builders.append(python27W3)
del python27W3

builders.append({
    'slavenames': fedora19_slaves,
    'name': 'python-3.3-tests',
    'builddir': 'python-3.3-tests',
    'factory': TwistedPython3Tests(source=git_update,
                                   python='python3.3'),
    'category': 'supported'})


builders.append({
        'slavenames': fedora18_slaves,
        'name': 'py-select-gc',
        'builddir': 'py-select-gc',
        'factory': GoodTwistedBuildFactory(git_update,
                                           python="python",
                                           uncleanWarnings=False,
                                           forceGarbageCollection=True),
        'category': 'supported'})


# This builder simulates an environment which is missing some
# extension modules Twisted uses but which are not supposed to cause
# test suite failures if they are missing.
builders.append({
        'name': 'py-without-modules',
        'builddir': 'py-without-modules',
        'slavenames': fedora17_slaves,
        'factory': GoodTwistedBuildFactory(
            git_update, python="python2.7", uncleanWarnings=False,
            extraTrialArguments={
                'trialArgs': [
                    '--without-module', 'OpenSSL',
                    '--without-module', 'Crypto',
                    ]}),
        'category': 'supported'})

builders.append({
        'name': 'winxp32-py2.7',
        'builddir': 'winxp32-py2.7',
        'slavenames': ['tomprince-socrates-winxp-1'],
        'factory': TwistedReactorsBuildFactory(git_update,
                                               RemovePYCs=Win32RemovePYCs,
                                               python="c:\\python27\python.exe",
                                               reactors=["select", "iocp"],
                                               uncleanWarnings=True),
        'category': 'supported'})


builders.append({
        'name': 'windows7-64-py2.7',
        'builddir': 'windows7-64-py2.7-select',
        'slavenames': ['bot-glyph-6'],
        'factory': TwistedReactorsBuildFactory(
            bzr_update, RemovePYCs=Win32RemovePYCs,
            python="C:\\Python27\\python.exe",
            reactors=["select", "iocp"],
            uncleanWarnings=True),
        'category': 'supported'})


builders.append({
        'name': "winxp32-py2.7-msi",
        'builddir': "winxp32-py2.7-msi",
        'slavenames': ['tomprince-socrates-winxp-1'],
        'factory': TwistedBdistMsiFactory(git_update,
                                          uncleanWarnings=True,
                                          arch="win32",
                                          pyVersion="2.7"),
        'category': 'supported'})


builders.append({
        'name': "windows7-64-py2.7-msi",
        'builddir': "windows7-64-py2.7-msi",
        'slavenames': ['bot-glyph-6'],
        'factory': TwistedBdistMsiFactory(bzr_update,
                                          uncleanWarnings=True,
                                          arch="win-amd64",
                                          pyVersion="2.7"),
        'category': 'supported'})


builders.append({
        'name': 'rhel6-x86_64-py2.6',
        'builddir': 'rhel6-x86_64-py2.6',
        'slavenames': rhel6_slaves,
        'factory': TwistedReactorsBuildFactory(
            git_update, python="python", reactors=["poll", "epoll", "glib2"]),
        'category': 'supported'})

builders.append({
        'name': 'fedora11-64bit-py2.7',
        'slavenames': ['bot-flumotion-2'],
        'builddir': 'fedora11-64bit-py2.7',
        'factory': TwistedReactorsBuildFactory(
            source_copy, python="python", reactors=["poll", "epoll", "glib2"]),
        'category': 'unsupported'})

builders.append({
        'name': 'fedora17-x86_64-py2.7',
        'builddir': 'fedora17-x86_64-py2.7',
        'slavenames': fedora17_slaves,
        'factory': TwistedReactorsBuildFactory(
            git_update, python="python", reactors=["select", "poll", "epoll", "glib2"]),
        'category': 'supported'})

builders.append({
        'name': 'fedora18-x86_64-py2.7',
        'builddir': 'fedora18-x86_64-py2.7',
        'slavenames': fedora18_slaves,
        'factory': TwistedReactorsBuildFactory(
            git_update, python="python", reactors=["select", "poll", "epoll", "glib2"]),
        'category': 'supported'})

builders.append({
        'name': 'fedora19-x86_64-py2.7',
        'builddir': 'fedora19-x86_64-py2.7',
        'slavenames': fedora19_slaves,
        'factory': TwistedReactorsBuildFactory(
            git_update, python="python", reactors=["select", "poll", "epoll", "glib2"]),
        'category': 'supported'})

_supportedCombos = {
    "debian6-x86_64-py2.6", "debian6-x86_64-py2.6-glib",
    "ubuntu-12.04-x86_64-py2.7", "ubuntu-12.04-x86_64-py2.7-glib",
    }
for name, reactors in [("", ["select", "poll", "epoll"]),
                       ("-glib", ["glib2"])
                       ]:
    for distro, python, slaves in [('debian6', 'py2.6', debian6_slaves),
                                   ('debian7', 'py2.7', debian7_slaves),
                                   ('ubuntu-12.04', 'py2.7', ubuntu12_04_slaves),
                                   ('ubuntu-12.10', 'py2.7', ubuntu12_10_slaves),
                                   ('ubuntu-13.04', 'py2.7', ubuntu13_04_slaves),
                                   ('ubuntu-13.10', 'py2.7', ubuntu13_10_slaves),
                                   ('freebsd-10.0', 'py2.7', freebsd10_0_slaves),
                                   ]:
        category = 'supported'
        builderName = '%s-x86_64-%s%s' % (distro, python, name)
        if builderName not in _supportedCombos:
            category = 'un' + category

        builders.append({
                'name': builderName,
                'builddir': builderName,
                'slavenames': slaves,
                'factory': TwistedReactorsBuildFactory(
                    git_update, python="python", reactors=reactors),
                'category': category,
                })

builders.append({
          'name': 'trusty64-py2.7-wx',
          'slavenames': ['bot-glyph-1'],
          'builddir': 'ubuntu-py2.6-wx',
          'factory': TwistedReactorsBuildFactory(git_update,
                                                 python="python2.7",
                                                 reactors=["wx"],
                                                 uncleanWarnings=True),
          'category': 'unsupported'})

builders.append({
          'name': 'trusty64-py2.7-poll',
          'slavenames': ['bot-glyph-1'],
          'builddir': 'ubuntu64-py2.6-poll',
          'factory': TwistedReactorsBuildFactory(git_update,
                                                 python="python2.7",
                                                 reactors=["poll"],
                                                 uncleanWarnings=False),
          'category': 'supported'})

builders.append({
          'name': 'trusty64-py2.7-epoll',
          'slavenames': ['bot-glyph-1'],
          'builddir': 'ubuntu64-py2.6-epoll',
          'factory': TwistedReactorsBuildFactory(git_update,
                                                 python="python2.7",
                                                 reactors=["epoll"],
                                                 uncleanWarnings=False),
          'category': 'supported'})


bot = bot_exarkun_1.copy()
bot.update({
        'slavenames': ['bot-exarkun-1', 'osuosl-osx10.6'],
        'name': 'osx10.6-py2.6-select',
        'builddir': 'osx10.6-py2.6-select',
        'factory': TwistedReactorsBuildFactory(bzr_update,
                                               python="python2.6",
                                               reactors=["select"],
                                               uncleanWarnings=False),
        'category': 'supported'})
builders.append(bot)
del bot

bot = bot_exarkun_1.copy()
bot.update({
        'slavenames': ['bot-exarkun-1', 'osuosl-osx10.6'],
        'name': 'osx10.6-py2.6-cf',
        'builddir': 'osx10.6-py2.6-cf',
        'factory': TwistedReactorsBuildFactory(bzr_update,
                                               python="python2.6",
                                               reactors=["cf"],
                                               uncleanWarnings=False),
        'category': 'unsupported'})
builders.append(bot)
del bot

builders.append({
        'name': 'freebsd-9.2-amd64-python2.7',
        'slavenames': ['tavendo-freebsd-9.2-amd64'],
        'builddir': 'freebsd-9.2-amd64',
        'factory': TwistedReactorsBuildFactory(git_update,
                                               python="python2.7",
                                               reactors=["select", "poll", "kqueue"],
                                               uncleanWarnings=False),
        'category': 'unsupported'})

builders.append({
        'name': 'freebsd-9.2-amd64-pypy2.2',
        'slavenames': ['tavendo-freebsd-9.2-amd64'],
        'builddir': 'freebsd-9.2-amd64-pypy2.2',
        'factory': TwistedReactorsBuildFactory(git_update,
                                               python="pypy2.2",
                                               reactors=["select", "poll", "kqueue"],
                                               uncleanWarnings=False),
        'category': 'unsupported'})


builders.append({
        'name': 'freebsd-9.2-amd64-pypy-nightly',
        'slavenames': ['tavendo-freebsd-9.2-amd64'],
        'builddir': 'freebsd-9.2-amd64-pypy-nightly.2',
        'factory': TwistedReactorsBuildFactory(git_update,
                                               python="pypy.nightly",
                                               reactors=["select", "poll", "kqueue"],
                                               uncleanWarnings=False),
        'category': 'unsupported'})


builders.append({
        'name': 'ubuntu-12.10-py2.7-gi',
        'slavenames': ['canonical-ubuntu-12.10'],
        'builddir': 'ubuntu-12.10-py2.7',
        'factory': TwistedReactorsBuildFactory(git_update,
                                               python=["/usr/bin/python"],
                                               reactors=["gi"],
                                               uncleanWarnings=True),
        'category': 'unsupported'})

builders.append({
        'name': 'ubuntu-12.10-py2.7-gtk',
        'slavenames': ['canonical-ubuntu-12.10'],
        'builddir': 'ubuntu-12.10-py2.7-gtk',
        'factory': TwistedReactorsBuildFactory(git_update,
                                               python=["xvfb-run", "-a", "/usr/bin/python"],
                                               reactors=["gtk3"],
                                               uncleanWarnings=True),
        'category': 'unsupported'})

builders.append({
        'name': 'ubuntu-13.04-py2.7-gi',
        'slavenames': ['canonical-ubuntu-13.04'],
        'builddir': 'ubuntu-13.04-py2.7',
        'factory': TwistedReactorsBuildFactory(git_update,
                                               python=["/usr/bin/python"],
                                               reactors=["gi"],
                                               uncleanWarnings=True),
        'category': 'unsupported'})

builders.append({
        'name': 'ubuntu-13.04-py2.7-gtk',
        'slavenames': ['canonical-ubuntu-13.04'],
        'builddir': 'ubuntu-13.04-py2.7-gtk',
        'factory': TwistedReactorsBuildFactory(git_update,
                                               python=["xvfb-run", "-a", "/usr/bin/python"],
                                               reactors=["gtk3"],
                                               uncleanWarnings=True),
        'category': 'unsupported'})




# The next two builders work together.  The first translates PyPy and
# runs once a week.  The second uses the result of the first to test
# Twisted against pypy, and is scheduled in the usual way.  As such,
# they must be on the same slave and share a builddir.  Since buildbot
# doesn't let two builders have the same builddir in the master
# configuration, the slaves have to be configured to cause this to
# happen, probably by with symlinks. -exarkun
pypy_packages = [
                # "pycrypto-2.1.0",  -- 2012-06-23 not supported on pypy
                # "gmpy-1.14",  -- 2012-06-23 not supported on pypy
                # "pyOpenSSL-0.11",  -- 2012-06-24 twisted.internet.test.test_endpoints.ServerStringTests.test_ssl hangs
                "setuptools-12.0.5",
                "zope.interface-3.6.1",
                "pyasn1-0.0.11a",
                "testtools-0.9.11",
                "subunit-0.0.5",
                ]
builders.append({
    'name': 'trusty64-pypy',
    'slavenames': ['bot-glyph-1'],
    'builddir': 'lucid32-pypy',
    'factory': GoodTwistedBuildFactory(git_update,
                                       python="../pypy-c"),
    'category': 'unsupported'})
builders.append({
    'name': 'trusty64-pypy-translator',
    'slavenames': ['bot-glyph-1'],
    'builddir': 'lucid32-pypy-translator',
    'factory': PyPyTranslationFactory(["-Ojit"], [], pypy_packages),
    'category': 'translator'})

# Let's also test the release version of pypy; in this case, 2.4, the latest
# ppa-packaged version manually installed on the builder.
builders.append({
    'name': 'trusty64-pypy-2.4',
    'slavenames': ['bot-glyph-1'],
    'builddir': 'trusty64-pypy-2.4',
    'factory': GoodTwistedBuildFactory(
        git_update,
        python="../../../environments/pypy-with-dependencies/bin/python"
    ),
    'category': 'unsupported'})

builders.append({
    'name': 'fedora19-pypy',
    'slavenames': ['fedora-fedora19-x86_64-1'],
    'builddir': 'fedora19-pypy',
    'slavebuilddir': 'pypy-trunk',
    'factory': GoodTwistedBuildFactory(git_update,
        python="../../pypy-translator/pypy-c"),
    'category': 'unsupported'})
builders.append({
    'name': 'fedora19-pypy-translator',
    'slavenames': ['fedora-fedora19-x86_64-1'],
    'builddir': 'fedora19-pypy-translator',
    'slavebuilddir': 'pypy-translator',
    'factory': PyPyTranslationFactory(["-Ojit"], [], pypy_packages),
    'category': 'translator'})


bot = bot_exarkun_1.copy()
bot.update({
        'name': 'osx10.6-py2.6-benchmarks',
        'builddir': 'osx10.6-py2.6-benchmarks',
        'factory': TwistedBenchmarksFactory("python2.6", source_update),
        'locks': [twoCPULock.access('exclusive')],
        'category': 'benchmark'})
builders.append(bot)
del bot

bot = bot_exarkun_1.copy()
bot.update({
        'name': 'osx10.6-pypy1.5-benchmarks',
        'builddir': 'osx10.6-pypy1.5-benchmarks',
        'factory': TwistedBenchmarksFactory("pypy", source_update),
        'locks': [twoCPULock.access('exclusive')],
        'category': 'benchmark'})
builders.append(bot)
del bot


# PyOpenSSL builders.  These are merged into builders later on so that
# they are excluded from certain parts of the configuration (because
# they're not really part of Twisted). -exarkun
pyOpenSSLBuilders = []

pyOpenSSLBuilders.append({
        'name': 'trusty64-py3.4-pyopenssl',
        'slavenames': ['bot-glyph-1'],
        'builddir': 'lucid64-py3.2-pyopenssl',
        'factory': LinuxPyOpenSSLBuildFactory(
            versions=["3.4"],
            source=False,
            platform="linux-x86_64",
            useTrial=False),
        'category': 'pyopenssl'})

pyOpenSSLBuilders.append({
        'name': 'centos5.7-pyopenssl',
        'slavenames': ['bot-centos5.7'],
        'builddir': 'centos5.7-pyopenssl',
        'factory': LinuxPyOpenSSLBuildFactory(
            versions=["2.4"],
            source=False,
            platform="linux-i686"),
        'category': 'pyopenssl'})

pyOpenSSLBuilders.append({
        'name': 'centos6-pyopenssl',
        'slavenames': ['bot-centos6'],
        'builddir': 'centos6-pyopenssl',
        'factory': LinuxPyOpenSSLBuildFactory(
            versions=["2.6"],
            source=False,
            platform="linux-x86_64"),
        'category': 'pyopenssl'})

bot = bot_exarkun_1.copy()
bot.update({
        'name': 'osx10.6-py2.6-pyopenssl',
        'builddir': 'osx10.6-py2.6-pyopenssl',
        'factory': OSXPyOpenSSLBuildFactory(
            versions=["2.6"],
            osxVersion="10.6",
            source=False),
        'category': 'pyopenssl'})
pyOpenSSLBuilders.append(bot)
del bot

c['builders'] = builders


# Now set up the schedulers. We do this after setting up c['builders']
# so we can auto-generate the correct configuration from the builder
# definitions.
c['schedulers'] = [
    TwistedScheduler(
        name="all", branch=None,
        builderNames=[b['name'] for b in builders if b['category'] in ('supported', 'unsupported')],
        treeStableTimer=None),
    Nightly(
        name="WeeklyInterpreter",
        builderNames=[
            b['name'] for b in builders if b['category'] == 'translator'],
        hour=4, minute=0, dayOfWeek=1, branch=None),
    Nightly(
        name="Benchmarks",
        builderNames=[
            b['name'] for b in builders if b['category'] == 'benchmark'],
        hour=6, minute=3, branch=None, onlyIfChanged=True),
    ]

c['schedulers'].extend([
    forcesched.ForceScheduler(
        name='force-supported',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.StringParameter(name='branch', default=''),
        project=forcesched.FixedParameter(name="project", default=""),
	properties=[forcesched.StringParameter(name='test-case-name', label="test case", default='twisted')],
        builderNames=[ b['name'] for b in builders if b['category'] == 'supported' ]),
    forcesched.ForceScheduler(
        name='force-unsupported',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.StringParameter(name='branch', default=''),
        project=forcesched.FixedParameter(name="project", default=""),
        properties=[forcesched.StringParameter(name='test-case-name', label="test case", default='twisted')],
        builderNames=[ b['name'] for b in builders if b['category'] == 'unsupported' ]),
    forcesched.ForceScheduler(
        name='force-pyopenssl',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.StringParameter(name='branch', default='trunk'),
        project=forcesched.FixedParameter(name="project", default="pyopenssl"),
        properties=[],
        builderNames=[ b['name'] for b in pyOpenSSLBuilders]),
    forcesched.ForceScheduler(
        name='force-pypy-translate',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.StringParameter(name='branch', default=''),
        project=forcesched.FixedParameter(name="project", default="pypy"),
        properties=[],
        builderNames=['trusty64-pypy-translator', 'fedora19-pypy-translator']),
    forcesched.ForceScheduler(
        name='force-py2.7-translate',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.StringParameter(name='branch', default=''),
        project=forcesched.FixedParameter(name="project", default="cpy2.7"),
        properties=[],
        builderNames=['trusty64-cpy2.7maint-translator', 'fedora18-x86_64-py2.7-translator']),
    forcesched.ForceScheduler(
        name='force-benchmarks',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.FixedParameter(name='branch', default='trunk'),
        project=forcesched.FixedParameter(name="project", default=""),
        properties=[],
        builderNames=[
            b['name'] for b in builders if b['category'] == 'benchmark']),
	])

# Now merge PyOpenSSL builders
builders.extend(pyOpenSSLBuilders)
del pyOpenSSLBuilders

# configure other status things

c['slavePortnum'] = 9987
c['status'] = []

if hasattr(private, "irc_password"):
    c['status'].append(words.IRC(host="irc.freenode.net",
                                 nick='buildbot',
                                 password=private.irc_password,
                                 channels=["twisted-dev"]))


from twisted.python.util import sibpath
import jinja2
users = [ ('twisted', 'matrix') ]
authz = Authz(
    auth=BasicAuth(users),
    default_action='auth',
    gracefulShutdown=False,
    cleanShutdown=False,
    showUsersPage=False,
    )
status = TwistedWebStatus(
    authz=authz,
    public_html=sibpath(__file__, 'public_html'),
    jinja_loaders=[jinja2.FileSystemLoader(sibpath(__file__, 'templates'))],
    **private.webOptions)
c['status'].append(status)
del status

c['debugPassword'] = private.debugPassword
#c['interlocks'] = [("do-deb", ["full-2.2"], ["debuild"])]
if hasattr(private, "manhole"):
    from buildbot import manhole
    c['manhole'] = manhole.PasswordManhole(*private.manhole)

c['status'].append(client.PBListener(9936))
m = mail.MailNotifier(fromaddr="buildbot@twistedmatrix.com",
                      builders=["quick", "debian-py2.3-select"],
                      sendToInterestedUsers=True,
                      extraRecipients=["warner@lothar.com"],
                      mode="problem",
                     )
c['status'].append(m)


c['projectName'] = "Twisted"
c['projectURL'] = "http://twistedmatrix.com/"
c['buildbotURL'] = "http://buildbot.twistedmatrix.com/"

c['buildCacheSize'] = 500
c['mergeRequests'] = lambda builder, req1, req2: False

# vim: filetype=python sw=4 expandtab
