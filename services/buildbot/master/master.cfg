#! /usr/bin/python

# This configuration file is described in $BUILDBOT/docs/config.xhtml

# This is used to run the Twisted Buildbot at
# <http://buildbot.twistedmatrix.com/>. Passwords and other secret
# information are loaded from a neighboring file called 'private.py'.

# Enable TCP keepalives.  The build master is terrible at noticing
# disconnected slaves.  Also it's terrible at letting me enable tcp
# keepalives.
from twisted.spread.pb import PBServerFactory
_parent = PBServerFactory.protocol
class KeepaliveBroker(_parent):
    def makeConnection(self, transport):
        transport.setTcpKeepAlive(True)
        return _parent.makeConnection(self, transport)
PBServerFactory.protocol = KeepaliveBroker

# We now return to your regularly scheduled program.
from os.path import expanduser, dirname
import sys
sys.path.insert(0, expanduser('~/private'))
sys.path.insert(0, dirname(__file__))
del expanduser, dirname, sys

from buildbot.changes.pb import PBChangeSource
from buildbot.schedulers.timed import Nightly
from buildbot.schedulers import forcesched
from buildbot.status import words, client, mail
from buildbot.status.web.auth import BasicAuth
from buildbot.status.web.authz import Authz
from buildbot.locks import SlaveLock
from buildbot.buildslave import BuildSlave

import private # holds passwords
reload(private) # make it possible to change the contents without a restart

from twisted_factories import (
    TwistedDocumentationBuildFactory,
    TwistedReactorsBuildFactory,
    TwistedVirtualenvReactorsBuildFactory,
    TwistedJythonReactorsBuildFactory,
    Win32RemovePYCs,
    TwistedBdistFactory,
    TwistedCoveragePyFactory,
    TwistedCheckerBuildFactory,
    PyFlakesBuildFactory,
    TwistedBenchmarksFactory,
    CheckManifestBuildFactory,
    BASE_DEPENDENCIES, EXTRA_DEPENDENCIES, CEXT_DEPENDENCIES,
    WINDOWS_DEPENDENCIES, PY2_NONWIN_DEPENDENCIES
)

from txbuildbot.git import TwistedGit, MergeForward

from txbuildbot.web import TwistedWebStatus
from txbuildbot.scheduler import TwistedScheduler

BuildmasterConfig = c = {}

# I set really=False when testing this configuration at home
really = True
usePBChangeSource = True

# Maximum number of builds to execute on a slave at a time.  Slaves
# not listed here have no limit.
slave_max_builds = {
    'tomprince-socrates-winxp-1': 1,
    'bot-glyph-6': 1,
    'tavendo-freebsd-10.1-amd64': 1,
}

fedora22_slaves = ['fedora-fedora22-%d' % (i,) for i in range(1,3)]
fedora23_slaves = ['fedora-fedora23-%d' % (i,) for i in range(1,3)]
rhel7_slaves = ['fedora-rhel7-%d' % (i,) for i in range(1,3)]

debian8_slaves = ['rax-debian8-%d' % (i,) for i in range(1,3)]
ubuntu12_04_slaves = ['rackspace-ubuntu-12.04-%d' % (i,) for i in range(1,3)]
ubuntu15_04_slaves = ['rax-ubuntu1504-%d' % (i,) for i in range(1,4)]
ubuntu15_10_slaves = ['rax-ubuntu1510-%d' % (i,) for i in range(1,3)]


# These builders run some heavy builders (pypy, jython) so only run one at a
# time.
for slave in (ubuntu15_04_slaves + debian8_slaves):
    slave_max_builds[slave] = 1


c['slaves'] = []
alwaysNotify = ['tom.prince@ualberta.net']
for bot in private.bot_info.keys():
    password, notifyOnMissing = private.bot_info[bot]
    if alwaysNotify not in notifyOnMissing:
        notifyOnMissing.extend(alwaysNotify)
    c['slaves'].append(BuildSlave(
            bot, password, slave_max_builds.get(bot, None),
            notifyOnMissing, 2400))

c['change_source'] = []

# the Twisted buildbot currently uses the contrib/svn_buildbot.py script.
# This makes a TCP connection to the ChangeMaster service to push Changes
# into the build master. The script is invoked by
# /svn/Twisted/hooks/post-commit, so it will only be run for things inside
# the Twisted repository. However, the standard SVN practice is to put the
# actual trunk in a subdirectory named "trunk/" (to leave room for
# "branches/" and "tags/"). We want to only pay attention to the trunk, so
# we use "trunk" as a prefix for the ChangeSource. This also strips off that
# prefix, so that the Builders all see sensible pathnames (which means they
# can do things like ignore the sandbox properly).

source = PBChangeSource(prefix="trunk/")
c['change_source'].append(source)


## configure the builders


gitURL = "https://code.twistedmatrix.com/git/Twisted"

git_update = [
    TwistedGit(repourl=gitURL,
               branch="trunk", mode='full', method='fresh'),
    MergeForward(repourl=gitURL)
]

builders = []

oneCPULock = SlaveLock('cpu-1', maxCount=1)
twoCPULock = SlaveLock('cpu-2', maxCount=2)

builders.append({
    'slavenames': ubuntu15_04_slaves,
    'name': 'documentation',
    'builddir': 'documentation',
    'factory': TwistedDocumentationBuildFactory(git_update),
    'category': 'supported'})

# Builder for TwistedChecker.
# It requires package pylint 0.25.1, and pep8 >= 1.0.0 to run. -zomux
builders.append({
    'slavenames': ['bot-glyph-1'],
    'name': 'twistedchecker',
    'builddir': 'twistedchecker',
    'factory': TwistedCheckerBuildFactory(git_update),
    'category': 'supported'})

builders.append({
    'slavenames': ubuntu15_04_slaves,
    'name': 'pyflakes',
    'builddir': 'pyflakes',
    'factory': PyFlakesBuildFactory(git_update),
    'category': 'supported'})


#
# check-manifest
#
builders.append({
    'slavenames': ubuntu15_04_slaves,
    'name': 'check-manifest',
    'builddir': 'check-manifest',
    'factory': CheckManifestBuildFactory(git_update),
    'category': 'unsupported'})


#
# Debian 8
#
builders.append({
    'slavenames': debian8_slaves,
    'name': 'debian8-py2.7',
    'builddir': 'debian8-py2.7',
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python", reactors=["select", "poll", "epoll"]),
    'category': 'supported'})


#
# Windows 7
#
builders.append({
    'name': 'windows7-64-py2.7',
    'builddir': 'windows7-64-py2.7-select',
    'slavenames': ['bot-glyph-6'],
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, RemovePYCs=Win32RemovePYCs,
        dependencies=(["cryptography==1.1.2",] + BASE_DEPENDENCIES + CEXT_DEPENDENCIES +
                      EXTRA_DEPENDENCIES + WINDOWS_DEPENDENCIES),
        python="C:\\Python27\\python.exe",
        reactors=["select", "iocp"], platform="windows",
        uncleanWarnings=True),
    'category': 'supported'})


builders.append({
    'name': 'windows7-64-py2.7-coverage',
    'builddir': 'windows7-64-py2.7-coverage',
    'slavenames': ['bot-glyph-6'],
    'factory': TwistedCoveragePyFactory(
        source=git_update, RemovePYCs=Win32RemovePYCs,
        dependencies=(["cryptography==1.1.2",] + BASE_DEPENDENCIES + CEXT_DEPENDENCIES +
                      EXTRA_DEPENDENCIES + WINDOWS_DEPENDENCIES),
        python="C:\\Python27\\python.exe", platform="windows",
        buildID="windows64py27", uncleanWarnings=True),
    'category': 'supported'})


builders.append({
    'name': "windows7-64-py2.7-msi",
    'builddir': "windows7-64-py2.7-msi",
    'slavenames': ['bot-glyph-6'],
    'factory': TwistedBdistFactory(
        git_update,
        uncleanWarnings=True,
        arch="win-amd64",
        pyVersion="2.7"),
    'category': 'supported'})


builders.append({
    'name': 'windows7-64-py3.4',
    'builddir': 'windows7-64-py3.4-select',
    'slavenames': ['bot-glyph-6'],
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, RemovePYCs=Win32RemovePYCs,
        python="C:\\Python34\\python.exe",
        reactors=["select"], uncleanWarnings=True,
        virtualenv_module='venv', platform="windows",
        trial="./admin/run-python3-tests", tests='',
        dependencies=BASE_DEPENDENCIES + WINDOWS_DEPENDENCIES),
    'category': 'unsupported'})


builders.append({
    'name': 'windows7-64-py3.5',
    'builddir': 'windows7-64-py3.5-select',
    'slavenames': ['bot-glyph-6'],
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, RemovePYCs=Win32RemovePYCs,
        python="C:\\Python35\\python.exe",
        reactors=["select"], uncleanWarnings=True,
        virtualenv_module='venv', platform="windows",
        trial="./admin/run-python3-tests", tests='',
        dependencies=BASE_DEPENDENCIES + WINDOWS_DEPENDENCIES),
    'category': 'unsupported'})


#
# Ubuntu 12.04
#
builders.append({
    'name': "ubuntu12.04-py2.7",
    'builddir': "ubuntu12.04-py2.7",
    'slavenames': ubuntu12_04_slaves,
    'factory': TwistedReactorsBuildFactory(
        git_update, python="python",
        reactors=["select", "poll", "epoll", "glib2"]),
    'category': "supported",
})


#
# Ubuntu 14.04
#
builders.append({
    'name': 'ubuntu14.04-py2.7',
    'slavenames': ['bot-glyph-1'],
    'builddir': 'ubuntu64-py2.6-poll',
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python2.7", reactors=["select", "poll", "epoll"],
        dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES + EXTRA_DEPENDENCIES),
    'category': 'supported'})


#
# Ubuntu 15.04
#
builders.append({
    'name': 'ubuntu15.04-py2.7',
    'builddir': 'ubuntu15.04-py2.7',
    'slavenames': ubuntu15_04_slaves,
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python", reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

# No OPTIONAL modules
builders.append({
    'name': 'ubuntu15.04-py2.7-nomodules',
    'builddir': 'ubuntu15.04-py2.7-nomodules',
    'slavenames': ubuntu15_04_slaves,
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python", reactors=["select"],
        dependencies=["zope.interface", "constantly"]),
    'category': 'supported'})

builders.append({
    'name': 'ubuntu15.04-py2.7-coverage',
    'builddir': 'ubuntu15.04-py2.7-coverage',
    'slavenames': ubuntu15_04_slaves,
    'factory': TwistedCoveragePyFactory(python="python",
                                        buildID='ubuntu15.04py2.7',
                                        source=git_update),
    'category': 'supported'})

builders.append({
    'name': 'ubuntu15.04-pypy25',
    'builddir': 'ubuntu15.04-pypy25',
    'slavenames': ubuntu15_04_slaves,
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="pypy", reactors=["select"],
        dependencies=["cryptography<1.0",] + BASE_DEPENDENCIES + EXTRA_DEPENDENCIES),
    'category': 'unsupported'})

builders.append({
    'name': 'ubuntu15.04-jython2.7',
    'builddir': 'ubuntu15.04-jython2.7',
    'slavenames': ubuntu15_04_slaves,
    'factory': TwistedJythonReactorsBuildFactory(
        git_update, reactors=["select"]),
    'category': 'unsupported'})

builders.append({
    'name': 'ubuntu15.04-py3.4',
    'builddir': 'ubuntu1504-python-3.4',
    'slavenames': ubuntu15_04_slaves,
    'factory': TwistedVirtualenvReactorsBuildFactory(
        source=git_update, python='python3.4',
        trial="./admin/run-python3-tests", tests='',
        dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES),
    'category': 'supported'})

builders.append({
    'name': 'ubuntu15.04-py3.4-coverage',
    'builddir': 'ubuntu1504-py3.4-coverage',
    'slavenames': ubuntu15_04_slaves,
    'factory': TwistedCoveragePyFactory(
            source=git_update, python="python3.4", buildID="ubuntu1504py3.4",
            trial="./admin/run-python3-tests", tests="",
            dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES),
    'category': 'supported'})


builders.append({
    'slavenames': ubuntu15_04_slaves,
    'name': 'py2.7-select-gc',
    'builddir': 'py-select-gc',
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python",
        forceGarbageCollection=True),
    'category': 'supported'})


#
# Ubuntu 15.10
#
builders.append({
    'name': 'ubuntu15.10-py2.7',
    'builddir': 'ubuntu15.10-py2.7',
    'slavenames': ubuntu15_10_slaves,
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python",
        symlinkGIFrom="/usr/lib/python2.7/dist-packages",
        reactors=["select", "poll", "epoll", "gi"]),
    'category': 'supported'})

builders.append({
    'name': 'ubuntu15.10-py3.5',
    'builddir': 'ubuntu1510-python-3.5',
    'slavenames': ubuntu15_10_slaves,
    'factory': TwistedVirtualenvReactorsBuildFactory(
        source=git_update, python='python3.5',
        trial="./admin/run-python3-tests", tests='',
        dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES),
    'category': 'supported'})

builders.append({
    'name': 'ubuntu15.10-py3.5-coverage',
    'builddir': 'ubuntu1510-py3.5-coverage',
    'slavenames': ubuntu15_10_slaves,
    'factory': TwistedCoveragePyFactory(
            source=git_update, python="python3.5", buildID="ubuntu1510py3.5",
            trial="./admin/run-python3-tests", tests="",
            dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES),
    'category': 'supported'})


#
# Benchmarks
#
builders.append({
    'name': 'ubuntu15.04-py2.7-benchmark',
    'builddir': 'ubuntu15.04-py2.7-benchmark',
    'slavenames': ['rax-ubuntu1504-2'],
    'locks': [twoCPULock.access('counting')],
    'factory': TwistedBenchmarksFactory(python="python",
                                        source=git_update),
    'category': 'benchmark'})

builders.append({
    'name': 'ubuntu15.04-pypy25-benchmark',
    'builddir': 'ubuntu15.04-pypy25-benchmark',
    'slavenames': ['rax-ubuntu1504-2'],
    'locks': [twoCPULock.access('counting')],
    'factory': TwistedBenchmarksFactory(python="pypy",
                                        source=git_update),
        'category': 'benchmark'})

builders.append({
    'name': 'ubuntu15.04-py3.4-benchmark',
    'builddir': 'ubuntu15.04-py3.4-benchmark',
    'slavenames': ['rax-ubuntu1504-2'],
    'locks': [twoCPULock.access('counting')],
    'factory': TwistedBenchmarksFactory(python="python3.4",
                                        source=git_update),
    'category': 'benchmark'})


#
# Fedora 22
#
builders.append({
    'name': 'fedora22-py2.7',
    'builddir': 'fedora22-py2.7',
    'slavenames': fedora22_slaves,
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python", reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

builders.append({
    'name': 'fedora22-py2.7-coverage',
    'builddir': 'fedora22-py2.7-coverage',
    'slavenames': fedora22_slaves,
    'factory': TwistedCoveragePyFactory(python="python",
                                        buildID='fedora22py2.7',
                                        source=git_update),
    'category': 'supported'})

builders.append({
    'name': 'fedora22-py3.4',
    'builddir': 'fedora22-python-3.4',
    'slavenames': fedora22_slaves,
    'factory': TwistedVirtualenvReactorsBuildFactory(
        source=git_update, python='python3.4',
        trial="./admin/run-python3-tests", tests='',
        dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES),
    'category': 'supported'})

builders.append({
    'name': 'fedora22-py3.4-coverage',
    'builddir': 'fedora22-py3.4-coverage',
    'slavenames': fedora22_slaves,
    'factory': TwistedCoveragePyFactory(
            source=git_update, python="python3.4", buildID="fedora22py3.4",
            trial="./admin/run-python3-tests", tests="",
            dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES),
    'category': 'supported'})


#
# Fedora 23
#
builders.append({
    'name': 'fedora23-py2.7',
    'builddir': 'fedora23-py2.7',
    'slavenames': fedora23_slaves,
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python", reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

builders.append({
    'name': 'fedora23-py2.7-coverage',
    'builddir': 'fedora23-py2.7-coverage',
    'slavenames': fedora23_slaves,
    'factory': TwistedCoveragePyFactory(python="python",
                                        buildID='fedora23py2.7',
                                        source=git_update),
    'category': 'supported'})

builders.append({
    'name': 'fedora23-py3.4',
    'builddir': 'fedora23-python-3.4',
    'slavenames': fedora23_slaves,
    'factory': TwistedVirtualenvReactorsBuildFactory(
        source=git_update, python='python3.4',
        trial="./admin/run-python3-tests", tests='',
        dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES),
    'category': 'supported'})

builders.append({
    'name': 'fedora23-py3.4-coverage',
    'builddir': 'fedora23-py3.4-coverage',
    'slavenames': fedora23_slaves,
    'factory': TwistedCoveragePyFactory(
            source=git_update, python="python3.4", buildID="fedora23py3.4",
            trial="./admin/run-python3-tests", tests="",
            dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES),
    'category': 'supported'})


#
# RHEL 7
#
builders.append({
    'name': 'rhel7-py2.7',
    'builddir': 'rhel7-py2.7',
    'slavenames': rhel7_slaves,
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python", reactors=["select", "poll", "epoll"]),
    'category': 'supported'})

builders.append({
    'name': 'rhel7-py2.7-coverage',
    'builddir': 'rhel7-py2.7-coverage',
    'slavenames': rhel7_slaves,
    'factory': TwistedCoveragePyFactory(python="python",
                                        buildID='rhel7py2.7',
                                        source=git_update),
    'category': 'supported'})


#
# OS X 10.10
#
builders.append({
    'slavenames': ['egh-osx-1'],
    'locks': [twoCPULock.access('counting')],
    'name': 'osx10.10-py2.7',
    'builddir': 'osx10.10-py2.7',
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python",
        dependencies=["cryptography==1.1.2",] + BASE_DEPENDENCIES + CEXT_DEPENDENCIES + EXTRA_DEPENDENCIES),
    'category': 'supported'})


builders.append({
    'slavenames': ['egh-osx-1'],
    'locks': [twoCPULock.access('counting')],
    'name': 'osx10.10-py2.7-cf',
    'builddir': 'osx10.10-py2.7-cf',
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python", reactors=["cf"],
        dependencies=["cryptography==1.1.2",] + BASE_DEPENDENCIES + CEXT_DEPENDENCIES + EXTRA_DEPENDENCIES
    ),
    'category': 'unsupported'})


builders.append({
    'slavenames': ['egh-osx-1'],
    'locks': [twoCPULock.access('counting')],
    'name': 'osx10.10-py2.7-kqueue',
    'builddir': 'osx10.10-py2.7-kqueue',
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python", reactors=["kqueue"],
        dependencies=["cryptography==1.1.2",] + BASE_DEPENDENCIES + CEXT_DEPENDENCIES + EXTRA_DEPENDENCIES,
    ),
    'category': 'unsupported'})


#
# FreeBSD 10.1
#
builders.append({
    'name': 'freebsd10.1-py2.7',
    'builddir': 'freebsd10.1-python-2.7',
    'slavenames': ['tavendo-freebsd-10.1-amd64'],
    'factory': TwistedVirtualenvReactorsBuildFactory(
        git_update, python="python", reactors=["select", "poll", "kqueue"],
        dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES + EXTRA_DEPENDENCIES
    ),
    'category': 'supported'})


builders.append({
    'name': 'freebsd10.1-py2.7-coverage',
    'builddir': 'freebsd10.1-py2.7-coverage',
    'slavenames': ['tavendo-freebsd-10.1-amd64'],
    'factory': TwistedCoveragePyFactory(
        python="python",
        buildID='freebsd101py2.7',
        source=git_update,
        dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES + EXTRA_DEPENDENCIES
    ),
    'category': 'supported'})


builders.append({
    'slavenames': ['tavendo-freebsd-10.1-amd64'],
    'name': 'freebsd10.1-py3.4',
    'builddir': 'freebsd10.1-python-3.4',
    'factory': TwistedVirtualenvReactorsBuildFactory(
        source=git_update, python='python3.4',
        trial="./admin/run-python3-tests", tests='',
        dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES),
    'category': 'supported'})


builders.append({
    'slavenames': ['tavendo-freebsd-10.1-amd64'],
    'name': 'freebsd10.1-py3.4-coverage',
    'builddir': 'freebsd10.1-python-3.4-coverage',
    'factory': TwistedCoveragePyFactory(
            source=git_update, python="python3.4", buildID="freebsd101py3.4",
            trial="./admin/run-python3-tests", tests="",
            dependencies=BASE_DEPENDENCIES + CEXT_DEPENDENCIES),
    'category': 'supported'})


if 'vagrant-testing' in private.bot_info.keys():
    # When we are running in testing mode, add the testing
    # slave to all builders.
    for builder in builders:
        builder['slavenames'] = builder['slavenames'] + ['vagrant-testing']

c['builders'] = builders


# Now set up the schedulers. We do this after setting up c['builders']
# so we can auto-generate the correct configuration from the builder
# definitions.
c['schedulers'] = [
    TwistedScheduler(
        name="all", branch=None,
        builderNames=[b['name'] for b in builders if b['category'] in ('supported', 'unsupported')],
        treeStableTimer=None),
    Nightly(
        name="Benchmarks",
        builderNames=[
            b['name'] for b in builders if b['category'] == 'benchmark'],
        hour=6, minute=3, branch=None, onlyIfChanged=True),
    ]

c['schedulers'].extend([
    forcesched.ForceScheduler(
        name='force-supported',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.StringParameter(name='branch', default=''),
        project=forcesched.FixedParameter(name="project", default=""),
	properties=[forcesched.StringParameter(name='test-case-name', label="test case", default='twisted')],
        builderNames=[ b['name'] for b in builders if b['category'] == 'supported' ]),
    forcesched.ForceScheduler(
        name='force-unsupported',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.StringParameter(name='branch', default=''),
        project=forcesched.FixedParameter(name="project", default=""),
        properties=[forcesched.StringParameter(name='test-case-name', label="test case", default='twisted')],
        builderNames=[ b['name'] for b in builders if b['category'] == 'unsupported' ]),
    forcesched.ForceScheduler(
        name='force-benchmarks',
        repository=forcesched.FixedParameter(name='repository', default=''),
        branch=forcesched.StringParameter(name='branch', default=''),
        project=forcesched.FixedParameter(name="project", default=""),
        properties=[forcesched.StringParameter(name='test-case-name', label="test case", default='twisted')],
        builderNames=[ b['name'] for b in builders if b['category'] == 'benchmark' ]),
])

# configure other status things

c['slavePortnum'] = 9987
c['status'] = []

if hasattr(private, "irc_password"):
    c['status'].append(words.IRC(host="irc.freenode.net",
                                 nick='buildbot',
                                 password=private.irc_password,
                                 channels=["twisted-dev"]))


from twisted.python.util import sibpath
import jinja2
users = [ ('twisted', 'matrix') ]
authz = Authz(
    auth=BasicAuth(users),
    default_action='auth',
    gracefulShutdown=False,
    cleanShutdown=False,
    showUsersPage=False,
    )
status = TwistedWebStatus(
    authz=authz,
    public_html=sibpath(__file__, 'public_html'),
    jinja_loaders=[jinja2.FileSystemLoader(sibpath(__file__, 'templates'))],
    **private.webOptions)
c['status'].append(status)
del status

c['debugPassword'] = private.debugPassword
#c['interlocks'] = [("do-deb", ["full-2.2"], ["debuild"])]
if hasattr(private, "manhole"):
    from buildbot import manhole
    c['manhole'] = manhole.PasswordManhole(*private.manhole)

c['status'].append(client.PBListener(9936))
m = mail.MailNotifier(fromaddr="buildbot@twistedmatrix.com",
                      builders=["quick", "debian-py2.3-select"],
                      sendToInterestedUsers=True,
                      extraRecipients=["warner@lothar.com"],
                      mode="problem",
                     )
c['status'].append(m)


c['projectName'] = "Twisted"
c['projectURL'] = "http://twistedmatrix.com/"
c['buildbotURL'] = "http://buildbot.twistedmatrix.com/"

c['buildCacheSize'] = 500
c['mergeRequests'] = lambda builder, req1, req2: False

# vim: filetype=python sw=4 expandtab
